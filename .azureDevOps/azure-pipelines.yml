# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

parameters:
  - name: runConfig
    displayName: Run configuration
    values:
      - stas-check-pr
      - mgreisen-check-pr
      - joranwei-check-pr
      - tevoinea-check-pr
      - chkeita-check-pr

  - name: pr
    displayName: 'pull request id'
    type: string

  - name: retriesOnFailure
    displayName: Number times to re-run check-pr on failure
    type: number
    default: 10

  - name: mergeOnSuccess
    displayName: merge on success
    type: boolean
    default: false

  - name: skipCleanupOnFailure
    displayName: Skip Cleanup on Failure
    type: boolean
    default: false

  - name: region
    displayName: Region to use for testing
    type: string
    default: default
    values:
      - default
      - westus2
      - westus3
      - eastus
      - eastus2
      - southcentralus
      - westeurope
      - northeurope
      - uksouth
      - australiaeast

variables:
- group: 1f-service-account
- group: ${{ parameters.runConfig }}
- name: github_pat
  value: test

- name: instance
  value: check-pr-$(Build.BuildId)-$(System.JobAttempt)-$(System.JobId)

- name: subscription
  value: "038d675a-9bbe-4964-9cd1-6d50071a61b5"

- name: skipCleanupOnFailure
  value: ${{ parameters.skipCleanupOnFailure }}

- name: testRegion
  ${{ if eq(parameters.region, 'default') }}:
    value: $(region)
  ${{ else }}:
    value: ${{ parameters.region }}

pool:
  vmImage: ubuntu-latest

jobs:
- job: 'download'
  steps:
  - checkout: self
  - task: UsePythonVersion@0
    displayName: 'Use Python 3.8'
    inputs:
      versionSpec: '3.8'

  - script: python -m pip install --upgrade pip setuptools wheel
    displayName: 'Install tools'

  - script: pip install -r src/utils/check-pr/requirements.txt
    displayName: 'Install Requirements'

  - script: wget -q https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && sudo dpkg -i packages-microsoft-prod.deb
    displayName: 'Install function tools'

  - script: sudo apt-get update && sudo apt-get install azure-functions-core-tools-3
    displayName: apt-get update
  
  - script: az login -u 1f-test-runner@microsoft.com -p $(1f-test-runner)
    displayName: Login
  - task: PythonScript@0
    displayName: 'download'
    inputs:
      scriptSource: 'filePath'
      scriptPath: '$(Build.SourcesDirectory)/src/utils/check-pr/github_client.py'
      arguments: --pr ${{ parameters.pr }} --destination $(Build.SourcesDirectory)/checkpr
    env:
      GITHUB_ISSUE_TOKEN: $(GITHUB_ISSUE_TOKEN)
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        # Write your PowerShell commands here.
        cd $(Build.SourcesDirectory)/checkpr/
        python -m venv .env
        . ./.env/bin/Activate.ps1
        ls -al
        Expand-Archive -Path release-artifacts.zip -DestinationPath .
        Expand-Archive -Path onefuzz-deployment*.zip -DestinationPath .
        pip install install -q wheel
        pip install -q -r requirements.txt
        python deploy $(region) chkeitacheckpr chkeitacheckpr chkeita@microsoft.com `@config.json

        Write-Host "Hello World"
      pwsh: true



