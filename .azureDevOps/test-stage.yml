parameters:
- name: testTarget
  type: string

- name: jobName
  type: string

- name: pr
  type: string

- name: skip_update
  type: string


jobs:
  - job: ${{parameters.jobName}}
    variables:
      testTarget: ${{parameters.testTarget}}
    steps:
    - template: common-steps.yml
    - task: PythonScript@0
      displayName: 'download'
      inputs:
        scriptSource: 'filePath'
        scriptPath: '$(Build.SourcesDirectory)/src/utils/check-pr/github_client.py'
        arguments: --pr ${{ parameters.pr }} --destination $(Build.SourcesDirectory)/checkpr ${{ parameters.skip_update}}
      env:
        GITHUB_ISSUE_TOKEN: $(GITHUB_ISSUE_TOKEN)

    - pwsh: |
        # Write your PowerShell commands here.
        cd $(Build.SourcesDirectory)/checkpr/
        Expand-Archive -Path release-artifacts.zip -DestinationPath .
        Expand-Archive -Path onefuzz-deployment*.zip -DestinationPath .
        Expand-Archive -Path integration-test-artifacts.zip -DestinationPath integration
      name: 'expand'

    - pwsh: |
        python -m venv .env
        . ./.env/bin/Activate.ps1
        cd $(Build.SourcesDirectory)/checkpr
        pip install install -q wheel
        pip install -q -r requirements.txt
        pip install sdk/onefuzztypes-*.whl
        pip install sdk/onefuzz-*.whl
        cd integration

        Set-PSDebug -Trace 1
        python integration-test.py launch . --endpoint $(instance_endpoint) --client_id $(client_id) --client_secret $(client_secret) --targets $(testTarget) --test_id $(test_id) -v
        if ($LASTEXITCODE -ne 0) {
          throw "failed to launch"
        }

        python integration-test.py check_results $(test_id) --endpoint $(instance_endpoint) --client_id $(client_id) --client_secret $(client_secret) -v
        if ($LASTEXITCODE -ne 0) {
          throw "result check failed"
        }

      displayName: 'test ${{ parameters.testTarget }}'