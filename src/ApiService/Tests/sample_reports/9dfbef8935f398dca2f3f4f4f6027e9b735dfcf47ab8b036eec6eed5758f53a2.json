{"input_sha256":"a7392651c2f148dfe49e6f74f8f72b93742e4a3c3e1109233a9313d119ee7161","input_blob":{"account":"fuzz7tkgjsiivmq6i","container":"oft-crashes-cecbd958a1f257688f9768edaaf6c94d","name":"crash-cbe07cd3ebaba15610ecd968c4e4a04c6643e534"},"executable":"setup/fuzz.exe","crash_type":"heap-use-after-free","crash_site":"AddressSanitizer: heap-use-after-free /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:59 in LLVMFuzzerTestOneInput","call_stack":["#0 0x4fd64c in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:59","#1 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)","#2 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)","#3 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)","#4 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)","#5 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310","#6 0x41db59 in _start (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x41db59)"],"call_stack_sha256":"9dfbef8935f398dca2f3f4f4f6027e9b735dfcf47ab8b036eec6eed5758f53a2","minimized_stack":["#0 0x4fd64c in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:59"],"minimized_stack_sha256":"eb1f5544b054ce26748a1a811b76f63b2f1629930a19b7883b52f2a6c6064d12","minimized_stack_function_names":["simple.c"],"minimized_stack_function_names_sha256":"09fc2c3ae05668bf3d246eb97a9b649a7db4b3a5c12bb9aa9ed5d368a347585c","minimized_stack_function_lines":["simple.c simple.c:48:59"],"minimized_stack_function_lines_sha256":"5584d960e33030e75f95d1d733ce0c4f729ff1077b838a48e9786611b41d19c0","asan_log":"INFO: Seed: 3869252573\nINFO: Loaded 1 modules   (22 inline 8-bit counters): 22 [0x738f28, 0x738f3e), \nINFO: Loaded 1 PC tables (22 PCs): 22 [0x5144a8,0x514608), \nsetup/fuzz.exe: Running 1 inputs 1 time(s) each.\nRunning: /tmp/.tmpjHijak/crash-cbe07cd3ebaba15610ecd968c4e4a04c6643e534\n=================================================================\n==17336==ERROR: AddressSanitizer: heap-use-after-free on address 0x602000000050 at pc 0x0000004fd64d bp 0x7fffffffe250 sp 0x7fffffffe248\nWRITE of size 4 at 0x602000000050 thread T0\n    #0 0x4fd64c in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:59\n    #1 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)\n    #2 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)\n    #3 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)\n    #4 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)\n    #5 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #6 0x41db59 in _start (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x41db59)\n\n0x602000000050 is located 0 bytes inside of 4-byte region [0x602000000050,0x602000000054)\nfreed by thread T0 here:\n    #0 0x4cd36d in free (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4cd36d)\n    #1 0x4fd604 in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:47\n    #2 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)\n    #3 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)\n    #4 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)\n    #5 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)\n    #6 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n\npreviously allocated by thread T0 here:\n    #0 0x4cd5ed in malloc (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4cd5ed)\n    #1 0x4fd5ee in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:26\n    #2 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)\n    #3 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)\n    #4 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)\n    #5 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)\n    #6 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n\nSUMMARY: AddressSanitizer: heap-use-after-free /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:48:59 in LLVMFuzzerTestOneInput\nShadow bytes around the buggy address:\n  0x0c047fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n=>0x0c047fff8000: fa fa 04 fa fa fa 04 fa fa fa[fd]fa fa fa fa fa\n  0x0c047fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==17336==ABORTING\n","task_id":"d8e5fd3c-db64-4112-afad-ea2144e076b6","job_id":"8f772d8b-5d2f-451f-8aec-0876750f4af8"}