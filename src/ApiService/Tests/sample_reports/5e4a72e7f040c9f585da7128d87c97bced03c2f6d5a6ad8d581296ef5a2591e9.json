{"input_sha256":"6cce0e64125ee1594fda8a9a0e0629bbeebff381b3558eda16b4b7e19886693a","input_blob":{"account":"fuzz7tkgjsiivmq6i","container":"oft-crashes-cecbd958a1f257688f9768edaaf6c94d","name":"crash-a8e2f0cf7bf8ffdcb92a179c99b920f93e8dd199"},"executable":"setup/fuzz.exe","crash_type":"stack-buffer-overflow","crash_site":"AddressSanitizer: stack-buffer-overflow /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:33:69 in LLVMFuzzerTestOneInput","call_stack":["#0 0x4fd4fd in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:33:69","#1 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)","#2 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)","#3 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)","#4 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)","#5 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310","#6 0x41db59 in _start (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x41db59)"],"call_stack_sha256":"5e4a72e7f040c9f585da7128d87c97bced03c2f6d5a6ad8d581296ef5a2591e9","minimized_stack":["#0 0x4fd4fd in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:33:69"],"minimized_stack_sha256":"81a5adec053f0e20931e07a9f286aad533672cc37fefc596d5bb84acd2855abf","minimized_stack_function_names":["simple.c"],"minimized_stack_function_names_sha256":"09fc2c3ae05668bf3d246eb97a9b649a7db4b3a5c12bb9aa9ed5d368a347585c","minimized_stack_function_lines":["simple.c simple.c:33:69"],"minimized_stack_function_lines_sha256":"e3d72e4afa14c368f2ba14ee3ba91b0ef101b60e3f538390ec453ce0f35e5e6c","asan_log":"INFO: Seed: 1041083923\nINFO: Loaded 1 modules   (22 inline 8-bit counters): 22 [0x738f28, 0x738f3e), \nINFO: Loaded 1 PC tables (22 PCs): 22 [0x5144a8,0x514608), \nsetup/fuzz.exe: Running 1 inputs 1 time(s) each.\nRunning: /tmp/.tmplKKuRE/crash-a8e2f0cf7bf8ffdcb92a179c99b920f93e8dd199\n=================================================================\n==11429==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffffffe29c at pc 0x0000004fd4fe bp 0x7fffffffe250 sp 0x7fffffffe248\nWRITE of size 4 at 0x7fffffffe29c thread T0\n    #0 0x4fd4fd in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:33:69\n    #1 0x43b271 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x43b271)\n    #2 0x423767 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x423767)\n    #3 0x429741 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x429741)\n    #4 0x4557a2 in main (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x4557a2)\n    #5 0x7ffff6a99c86 in __libc_start_main /build/glibc-uZu3wS/glibc-2.27/csu/../csu/libc-start.c:310\n    #6 0x41db59 in _start (/onefuzz/blob-containers/fuzz7tkgjsiivmq6i/fuzz.exe+0x41db59)\n\nAddress 0x7fffffffe29c is located in stack of thread T0 at offset 60 in frame\n    #0 0x4fcccf in LLVMFuzzerTestOneInput /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:8\n\n  This frame has 1 object(s):\n    [32, 36) 'cnt' (line 9) <== Memory access at offset 60 overflows this variable\nHINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork\n      (longjmp and C++ exceptions *are* supported)\nSUMMARY: AddressSanitizer: stack-buffer-overflow /home/runner/work/onefuzz/onefuzz/src/integration-tests/libfuzzer/simple.c:33:69 in LLVMFuzzerTestOneInput\nShadow bytes around the buggy address:\n  0x10007fff7c00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c10: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c20: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c30: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c40: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1\n=>0x10007fff7c50: 04 f3 f3[f3]00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7c90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n  0x10007fff7ca0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n  Shadow gap:              cc\n==11429==ABORTING\n","task_id":"d8e5fd3c-db64-4112-afad-ea2144e076b6","job_id":"8f772d8b-5d2f-451f-8aec-0876750f4af8"}