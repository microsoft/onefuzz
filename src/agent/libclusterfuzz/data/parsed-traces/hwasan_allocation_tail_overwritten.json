{
  "text": "==11246==ERROR: HWAddressSanitizer: allocation-tail-overwritten; heap object [0x00444b02b180,0x00444b02b182) of size 2\n    #0 0x7e9aa0a3fc  frame1\n    #1 0x634b04d474  frame2\n    #2 0x634b053238  frame3\nallocated here:\n    #0 0x7e9aa09fa8  frame4\n    #1 0x634b04c4f8  frame5\n    #2 0x634b04d398  frame6\n\nTail contains: .. .. 80 80 80 80 80 80 dd 03 df 1d 71 dd 95 18\nExpected:      .. .. d0 0d a4 56 0d c1 dd 03 df 1d 71 dd 95 46\n                     ^^ ^^ ^^ ^^ ^^ ^^                      ^^\nThis error occurs when a buffer overflow overwrites memory\nto the right of a heap object, but within the 16-byte granule, e.g.\n   char *x = new char[20];\n   x[25] = 42;\nHWAddressSanitizer does not detect such bugs in uninstrumented code at the time of write,\nbut can detect them at the time of free/delete.\nTo disable this feature set HWASAN_OPTIONS=free_checks_tail_magic=0\nThread: T0 0x007500002000 stack: [0x007fcf489000,0x007fcfc89000) sz: 8388608 tls: [0x000000000000,0x000000000000)\nMemory tags around the buggy address (one tag corresponds to 16 bytes):\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   08  00  38  08  c7  08  b6  08  66  00  08  00  08  00  3b  00\n=> 08  00  a7  a7  96  07  0f  00 [02] 00  02  00  00  00  00  00 <=\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\n   00  00  00  00  00  00  00  00  00  00  00  00  00  00  00  00\nTags for short granules around the buggy address (one tag corresponds to 16 bytes):\n   d2  ..  ..  38  ..  c7  ..  b6  ..  ..  74  ..  2c  ..  ..  ..\n=> 20  ..  ..  ..  ..  96  c8  .. [18] ..  1b  ..  ..  ..  ..  .. <=\n   ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ..\nSee https://clang.llvm.org/docs/HardwareAssistedAddressSanitizerDesign.html#short-granules for a description of short granule tags\nSUMMARY: HWAddressSanitizer: alocation-tail-overwritten (/apex/com.android.runtime/lib64/bionic/libclang_rt.hwasan-aarch64-android.so+0x1b3fc)",
  "sanitizer": "HWAddressSanitizer",
  "summary": "HWAddressSanitizer: alocation-tail-overwritten (/apex/com.android.runtime/lib64/bionic/libclang_rt.hwasan-aarch64-android.so+0x1b3fc)",
  "fault_type": "alocation-tail-overwritten"
}
