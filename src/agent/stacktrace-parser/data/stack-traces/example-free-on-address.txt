=================================================================
==61632==ERROR: AddressSanitizer: attempting free on address which was not malloc()-ed: 0x7fff501dd020 in thread T0
    #0 0x55c4d93d6752 in __interceptor_free (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0xda752) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #1 0x55c4d94122b6 in LLVMFuzzerTestOneInput /workspaces/onefuzz/src/integration-tests/libfuzzer/simple.c:68:24
    #2 0x55c4d933a383 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x3e383) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #3 0x55c4d93240ff in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x280ff) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #4 0x55c4d9329e56 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x2de56) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #5 0x55c4d9353c72 in main (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x57c72) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #6 0x7fb4e6c0ad8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f) (BuildId: 69389d485a9793dbe873f0ea2c93e02efaa9aa3d)
    #7 0x7fb4e6c0ae3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f) (BuildId: 69389d485a9793dbe873f0ea2c93e02efaa9aa3d)
    #8 0x55c4d931e9c4 in _start (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x229c4) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)

Address 0x7fff501dd020 is located in stack of thread T0 at offset 32 in frame
    #0 0x55c4d9411aaf in LLVMFuzzerTestOneInput /workspaces/onefuzz/src/integration-tests/libfuzzer/simple.c:38

  This frame has 1 object(s):
    [32, 36) 'cnt' (line 39) <== Memory access at offset 32 is inside this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: bad-free (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0xda752) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0) in __interceptor_free
==61632==ABORTING
