=================================================================
==62893==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7fffb9b7ed9c at pc 0x55ec35545245 bp 0x7fffb9b7ed50 sp 0x7fffb9b7ed48
WRITE of size 4 at 0x7fffb9b7ed9c thread T0
    #0 0x55ec35545244 in LLVMFuzzerTestOneInput /workspaces/onefuzz/src/integration-tests/libfuzzer/simple.c:63:69
    #1 0x55ec3546d383 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x3e383) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #2 0x55ec354570ff in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x280ff) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #3 0x55ec3545ce56 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x2de56) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #4 0x55ec35486c72 in main (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x57c72) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)
    #5 0x7fb1900d1d8f  (/lib/x86_64-linux-gnu/libc.so.6+0x29d8f) (BuildId: 69389d485a9793dbe873f0ea2c93e02efaa9aa3d)
    #6 0x7fb1900d1e3f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x29e3f) (BuildId: 69389d485a9793dbe873f0ea2c93e02efaa9aa3d)
    #7 0x55ec354519c4 in _start (/workspaces/onefuzz/src/integration-tests/libfuzzer/fuzz.exe+0x229c4) (BuildId: 193b8a11b86868d1d18710a6ee963ada85f0f3a0)

Address 0x7fffb9b7ed9c is located in stack of thread T0 at offset 60 in frame
    #0 0x55ec35544aaf in LLVMFuzzerTestOneInput /workspaces/onefuzz/src/integration-tests/libfuzzer/simple.c:38

  This frame has 1 object(s):
    [32, 36) 'cnt' (line 39) <== Memory access at offset 60 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /workspaces/onefuzz/src/integration-tests/libfuzzer/simple.c:63:69 in LLVMFuzzerTestOneInput
Shadow bytes around the buggy address:
  0x100077367d60: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367d70: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367d80: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367d90: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367da0: 00 00 00 00 00 00 00 00 00 00 00 00 f1 f1 f1 f1
=>0x100077367db0: 04 f3 f3[f3]00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367dc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367dd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367de0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367df0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x100077367e00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==62893==ABORTING
